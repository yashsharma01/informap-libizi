<?php

/**
 * @file
 * Contains \Triquanta\IziTravel\Tests\DataType\CompactTourTest.
 */

namespace Triquanta\IziTravel\Tests\DataType;

use Triquanta\IziTravel\DataType\CompactTour;
use Triquanta\IziTravel\DataType\MultipleFormInterface;
use Triquanta\IziTravel\Tests\TestHelper;

/**
 * @coversDefaultClass \Triquanta\IziTravel\DataType\CompactTour
 */
class CompactTourTest extends \PHPUnit_Framework_TestCase
{

    /**
     * The class under test.
     *
     * @var \Triquanta\IziTravel\DataType\CompactTour|\PHPUnit_Framework_MockObject_MockObject
     */
    protected $sut;

    public function setUp()
    {
        $this->sut = CompactTour::createFromJson(TestHelper::getJsonResponse('tour_compact_include_all'),
          MultipleFormInterface::FORM_COMPACT);
    }

    /**
     * @covers ::createFromJson
     * @covers ::createFromData
     */
    public function testCreateFromJson()
    {
        CompactTour::createFromJson(TestHelper::getJsonResponse('tour_compact_include_all'),
          MultipleFormInterface::FORM_COMPACT);
    }

    /**
     * @covers ::createFromJson
     * @covers ::createFromData
     *
     * @expectedException \Triquanta\IziTravel\DataType\InvalidJsonFactoryException
     */
    public function testCreateFromJsonWithInvalidJson()
    {
        $json = 'foo';

        CompactTour::createFromJson($json, MultipleFormInterface::FORM_COMPACT);
    }

    /**
     * @covers ::getRoute
     */
    public function testGetRoute()
    {
        $this->assertSame('60.3979738843223,5.310616192590373;60.39746194732828,5.311564056759607;60.39726427439821,5.3120594465164;60.39711959921367,5.312597751617432;60.39663200565632,5.314276814460754;60.39637760611841,5.315116345882416;60.39610200437549,5.31589150428772;60.39614970484414,5.31613826751709;60.39604370370783,5.316417217254639;60.39572569822786,5.317361354827881;60.39551899300008,5.3179192543029785;60.39498367336062,5.319195985794067;60.394904169693135,5.319550037384033;60.39477431328538,5.319571495056152;60.39472926094121,5.319678783416748;60.394633855771374,5.319957733154297;60.394978373122164,5.32037615776062;60.39519038198744,5.320671200752258;60.395296385902334,5.3209662437438965;60.39471866038059,5.322790145874023;60.394419193116974,5.3239381313323975;60.394236331220846,5.325107574462891;60.39461265458454,5.325504541397095;60.3954447908033,5.326030254364014;60.39581845014712,5.32562255859375;60.395892651492176,5.325456261634827;60.396117904539466,5.325053930282593;60.396451806189035,5.324420928955078;60.39654323104343,5.324217081069946;60.39662670568626,5.3239864110946655;60.39673535490074,5.324109792709351;60.397172598073304,5.32511830329895;60.39653925605509,5.3262099623680115;60.39593770222632,5.3273606300354;60.395598495166084,5.326652526855469;60.39545804120797,5.326920747756958;60.39535998808557,5.327296257019043;60.395195682191385,5.327988266944885;60.39498367336062,5.32862663269043;60.39462325517969,5.32912015914917;60.39408527061895,5.329645872116089;60.3936214836898,5.330257415771484;60.39292181547805,5.330986976623535;60.391522433945795,5.3334760665893555;60.391108968800886,5.333347320556641;60.3901654004744,5.331974029541016;60.39003287464318,5.3315019607543945;60.38977312244935,5.331072807312012;60.389629992804004,5.330847501754761;60.38940204429226,5.330708026885986;60.3887977079565,5.329849720001221;60.38906276913373,5.32861590385437;60.38922180480446,5.328012406826019;60.389359635090784,5.327301621437073;60.38961408947125,5.325944423675537;60.38985263864712,5.324914455413818;60.389933479915804,5.324600636959076;60.3900381756868,5.324302911758423;60.39036418820993,5.323010087013245;60.38974661700694,5.322350263595581;60.38943782701312,5.323544517159462;60.390077933486346,5.3242988884449005;60.39067164418412,5.324847400188446;60.390953918017935,5.3237611055374146;60.39118715652252,5.3240373730659485;60.39140647870576,5.324301570653915;60.39133723666551,5.324386730790138;60.391290688704,5.324437357485294;60.39128389700295,5.3244853019714355;60.39122426249419,5.324724018573761;60.39116396526873,5.324989557266235;60.39123618940469,5.325289964675903;60.39132620865966,5.325271999534607;60.39140695123149,5.325262081020355;60.391556226538036,5.324715971946716;60.39154098674589,5.324442386627197;60.391608571856814,5.324301570653915;60.3916841079912,5.324034690856934;60.39175434318701,5.323817431926727;60.39175898135502,5.323600172996521;60.39179277370175,5.323539823293686;60.39188818719737,5.323224663734436;60.392047209068686,5.322602391242981;60.39243415904462,5.321223735809326;60.39224068463153,5.3210413455963135;60.39233079614503,5.320719480514526;60.39248451521015,5.320644378662109;60.39249776681971,5.320461988449097;60.392452711325184,5.320360064506531;60.392452711325184,5.320295691490173;60.39246861327155,5.320239365100861',
          $this->sut->getRoute());
    }

    /**
     * @covers ::getPurchase
     */
    public function testGetPurchase()
    {
        $this->assertInstanceOf('\Triquanta\IziTravel\DataType\PurchaseInterface', $this->sut->getPurchase());
    }

}
